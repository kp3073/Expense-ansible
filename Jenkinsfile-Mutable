pipeline {
    agent any

    options{
        ansiColor('xterm')
    }

    parameters{
        choice(name: 'ENV', choices: ['dev', 'prod'], description: 'Pick environment')
        choice(name: 'APP_NAME', choices: ['frontend', 'backend'], description: 'Choose APPLICATION')
        string(name: 'app_version', defaultValue: '', description: 'choose version to deploy')
    }
    stages{
        stage('Update Parameter Store'){
            steps{
                sh 'aws ssm put-parameter --name "${ENV}.${APP_NAME}.app_version" --type "String" --value "${app_version}" --overwrite'
            }
        }
        stage('Deployment'){
            steps{
                script {
                  env.ssh_user = sh (script: 'aws ssm get-parameter --name "ssh_username" --query "Parameter.Value" --output text', returnStdout: true).trim()
                  env.ssh_pass = sh (script: 'aws ssm get-parameter --name "ssh_password" --query "Parameter.Value" --output text --with-decryption --output text', returnStdout: true).trim()
                }
                sh '''
                aws ec2 describe-instances --filters "Name=tag:Name,Values=${ENV}-${APP_NAME}" --query 'Reservations[*].Instances[*].PrivateIpAddress' --output text > host
                ansible-playbook -i host main.yml -e role_name=${APP_NAME} -e env=${app_version}
                '''
            }
        }
    }
}
